{"version":3,"sources":["components/Weather.jsx","components/ContainerWeather.jsx","App.js","helpers/background.js","index.js"],"names":["Weather","data","useState","icon","setIcon","url","isCelsius","setIsCelcius","useEffect","weather","className","name","sys","country","main","temp","Math","round","src","alt","description","wind","speed","humidity","pressure","onClick","ContainerWeather","setweatherMain","latitude","setLatitude","longitude","setLongitude","undefined","setData","navigator","geolocation","getCurrentPosition","position","coords","axios","get","then","response","style","width","height","fontSize","role","App","weatherMain","background","setBackground","op","setBackgroundImage","backgroundSize","backgroundImage","backgroundRepeat","backgroundPosition","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAuCeA,EArCC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAGf,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAG,2CAAuCF,EAAvC,WAET,EAAgCD,oBAAS,GAAzC,mBAAOI,EAAP,KAAkBC,EAAlB,KAUA,OAJAC,qBAAU,WACNJ,EAAQH,EAAKQ,QAAQ,GAAGN,QACzB,CAACF,EAAKQ,UAGL,sBAAKC,UAAU,mBAAf,UACI,qBAAIA,UAAU,GAAd,UAAkBT,EAAKU,KAAvB,KAA8B,+BAAOV,EAAKW,IAAIC,aAG1CP,EACI,oBAAGI,UAAU,QAAb,UAAsBT,EAAKa,KAAKC,KAAhC,YAEA,oBAAGL,UAAU,QAAb,UAAsBM,KAAKC,MAAM,IAAAhB,EAAKa,KAAKC,KAAW,IAAtD,YAGR,qBAAKG,IAAKb,EAAKc,IAAI,KACnB,mBAAGT,UAAU,cAAb,SAA4BT,EAAKQ,QAAQ,GAAGW,cAC5C,oBAAGV,UAAU,aAAb,0BAAwCT,EAAKoB,KAAKC,MAAlD,UACA,oBAAGZ,UAAU,aAAb,uBAAqCT,EAAKa,KAAKS,SAA/C,QACA,oBAAGb,UAAU,aAAb,sBAAoCT,EAAKa,KAAKU,SAA9C,UACA,wBAAQC,QAxBY,WACxBlB,GAAcD,IAuBV,qC,iBC+BGoB,EA5DU,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAExB,EAAgCzB,mBAAS,GAAzC,mBAAO0B,EAAP,KAAiBC,EAAjB,KACA,EAAkC3B,mBAAS,GAA3C,mBAAO4B,EAAP,KAAkBC,EAAlB,KACA,EAAwB7B,wBAAS8B,GAAjC,mBAAO/B,EAAP,KAAagC,EAAb,KA4BA,OAvBAzB,qBAAU,WAKN0B,UAAUC,YAAYC,oBAJtB,SAAiBC,GACbR,EAAYQ,EAASC,OAAOV,UAC5BG,EAAaM,EAASC,OAAOR,gBAGlC,IAKHtB,qBAAU,WACN,GAAkB,IAAdsB,GAAiC,IAAdA,EAAiB,CACpC,IACMzB,EAAG,8DAA0DuB,EAA1D,gBAA0EE,EAA1E,kBADM,mCACN,iBACTS,IAAMC,IAAInC,GAAKoC,MAAK,SAAAC,GAChBT,EAAQS,EAASzC,MACjB0B,EAAee,EAASzC,KAAKQ,QAAQ,GAAGK,YAGjD,CAACgB,EAAWF,IAIX,sBAAKlB,UAAU,UAAf,UAEI,6CACA,qBAAKA,UAAU,gBAAf,cAGiBsB,IAAT/B,EACK,gCACG,qBACIS,UAAU,+BACViC,MAAO,CAAEC,MAAO,QAASC,OAAQ,QAASC,SAAU,SACpDC,KAAK,WAIT,mBAAGrC,UAAU,mBAAb,6CAKJ,cAAC,EAAD,CAAST,KAAMA,UC7BxB+C,MAzBf,WAEE,MAAoC9C,mBAAS,IAA7C,mBAAO+C,EAAP,KAAoBtB,EAApB,KACA,EAAkCzB,mBAAS,IAA3C,mBAAOgD,EAAP,KAAmBC,EAAnB,KAOA,OALA3C,qBAAU,WACR2C,ECV8B,SAACC,GAE/B,IAAIF,EAAa,GACjB,OAAQE,GAEJ,IAAK,OACDF,EAAa,iFACb,MACJ,IAAK,eACDA,EAAa,iHACb,MACJ,IAAK,UACDA,EAAW,4EAInB,OAAOA,EDNOG,CAAmBJ,MAChC,CAACA,IAIF,qBACEvC,UAAU,MACViC,MAAO,CACLW,eAAe,QACfC,gBAAgB,OAAD,OAAQL,EAAR,KACfM,iBAAkB,YAClBC,mBAAmB,UANvB,SASE,cAAC,EAAD,CAAkB9B,eAAgBA,OElBxC+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9173bb14.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst Weather = ({ data }) => {\r\n\r\n    \r\n    const [icon, setIcon] = useState(\"\");\r\n    const url = `http://openweathermap.org/img/wn/${icon}@2x.png`\r\n\r\n    const [isCelsius, setIsCelcius]=useState(true);\r\n\r\n    const handleChangeIsCelcius=()=>{\r\n        setIsCelcius(!isCelsius);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIcon(data.weather[0].icon)\r\n    }, [data.weather])\r\n\r\n    return (\r\n        <div className=\"container border\">\r\n            <h2 className=\"\">{data.name}, <span>{data.sys.country}</span></h2>\r\n            \r\n            {\r\n                isCelsius ?\r\n                    <p className=\"title\">{data.main.temp} °c</p>\r\n                :\r\n                    <p className=\"title\">{Math.round(data.main.temp*(9/5)+32)} °f</p>\r\n            }\r\n\r\n            <img src={url} alt=\"\" />\r\n            <p className=\"description\">{data.weather[0].description}</p>\r\n            <p className=\"text-small\">winds speed: {data.wind.speed} m/s</p>\r\n            <p className=\"text-small\">humidity: {data.main.humidity} %</p>\r\n            <p className=\"text-small\">presure: {data.main.pressure} m/b</p>\r\n            <button onClick={handleChangeIsCelcius} >Degrees °F/°C</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","import React, { useState, useEffect } from 'react'\r\nimport Weather from './Weather';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst ContainerWeather = ({ setweatherMain }) => {\r\n\r\n    const [latitude, setLatitude] = useState(0);\r\n    const [longitude, setLongitude] = useState(0);\r\n    const [data, setData] = useState(undefined);\r\n\r\n    // este useEffect trae las coordenadas de mi localización\r\n    // y las almacena en las variables de estado \r\n\r\n    useEffect(() => {\r\n        function success(position) {\r\n            setLatitude(position.coords.latitude)\r\n            setLongitude(position.coords.longitude)\r\n        };\r\n        navigator.geolocation.getCurrentPosition(success);\r\n    }, [])\r\n\r\n    // Este useEffecte hace la peticion a la api y guarda los datos en la variable\r\n    // de estado data\r\n\r\n    useEffect(() => {\r\n        if (longitude !== 0 && longitude !== 0) {\r\n            const apiKey = \"5d43f7a8d20ffd860e07ae2b2f927042\";\r\n            const url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`\r\n            axios.get(url).then(response => {\r\n                setData(response.data)\r\n                setweatherMain(response.data.weather[0].main)\r\n            })\r\n        }\r\n    }, [longitude, latitude])\r\n\r\n\r\n    return (\r\n        <div className=\"overlay\">\r\n\r\n            <h2>Weather App</h2>\r\n            <div className=\"container-app\">\r\n\r\n                {\r\n                    data === undefined ?\r\n                        (<div>\r\n                            <div\r\n                                className=\"spinner-border text-success \"\r\n                                style={{ width: \"20rem\", height: \"20rem\", fontSize: \"15rem\" }}\r\n                                role=\"status\"\r\n                            >\r\n                                \r\n                            </div>\r\n                            <p className=\"text-center mt-5\">Please wait, It's Loading...</p>\r\n                        </div>\r\n\r\n                        )\r\n                        :\r\n                        <Weather data={data} />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContainerWeather\r\n","import { useState, useEffect } from \"react\";\nimport {setBackgroundImage} from \"./helpers/background\";\nimport ContainerWeather from \"./components/ContainerWeather\";\n\nfunction App() {\n  \n  const [weatherMain, setweatherMain]=useState(\"\");\n  const [background, setBackground]=useState(\"\")\n\n  useEffect(() => {\n    setBackground(setBackgroundImage(weatherMain))\n  }, [weatherMain])\n\n\n  return (\n    <div \n      className=\"app\" \n      style={{\n        backgroundSize:\"cover\", \n        backgroundImage:`url(${background})`, \n        backgroundRepeat: \"no-repeat\", \n        backgroundPosition:\"center\"}}\n      >\n         \n      <ContainerWeather setweatherMain={setweatherMain}/>\n    </div>\n  );\n}\n\nexport default App;\n","export const setBackgroundImage = (op) => {\r\n\r\n    let background = \"\";\r\n    switch (op) {\r\n\r\n        case \"Rain\":\r\n            background = \"https://image.freepik.com/foto-gratis/lluvia-fuera-ventanas-villa_1321-908.jpg\";\r\n            break;\r\n        case \"Thunderstorm\":\r\n            background = \"https://images.pexels.com/photos/1114688/pexels-photo-1114688.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\";\r\n            break;\r\n        case \"Drizzle\":\r\n            background=\"https://cdn.pixabay.com/photo/2017/08/05/15/19/puddle-2584378_960_720.jpg\"\r\n            break;\r\n\r\n    }\r\n    return background;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}